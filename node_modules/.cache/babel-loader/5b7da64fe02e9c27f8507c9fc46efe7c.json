{"ast":null,"code":"var _jsxFileName = \"/home/mati/utn-web/reactjs/primerproyecto/src/pages/home/components/TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const taskRef = useRef(tasks);\n  const destroyTask = taskId => {\n    let newTasks = taskRef.current.slice().filter(task => {\n      return parseInt(task.key) !== taskId;\n    });\n    setTasks(newTasks);\n  };\n  useEffect(() => {\n    taskRef.current = tasks;\n    localStorage.setItem(t);\n  }, [tasks]);\n  const handleNewTask = () => {\n    // El ID pasa a ser un timestamp (igual al key).\n    // Le paso un task ID para tener un prop desde \n    // la task y así poder levantarla y poder quitarla\n    // del array {tasks} (que es un estado de la lista).\n    let taskId = +new Date();\n    setTasks([...tasks, /*#__PURE__*/_jsxDEV(Task, {\n      onDestroy: destroyTask,\n      taskId: taskId\n    }, taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }, this)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tareas para hacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), tasks, /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"right\",\n      title: \"Crea una nueva tarea!\",\n      color: \"blue\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          background: 'white'\n        },\n        onClick: handleNewTask,\n        size: \"middle\",\n        icon: /*#__PURE__*/_jsxDEV(PlusSquareOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 92\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"JGTEj1eE5R5iN1eggulVjoV4KIU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Tooltip","PlusSquareOutlined","Task","TaskList","tasks","setTasks","taskRef","destroyTask","taskId","newTasks","current","slice","filter","task","parseInt","key","localStorage","setItem","t","handleNewTask","Date","textAlign","background"],"sources":["/home/mati/utn-web/reactjs/primerproyecto/src/pages/home/components/TaskList.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport { Button, Tooltip  } from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport Task from './Task';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const taskRef = useRef(tasks);\n\n  const destroyTask = (taskId) => {\n    let newTasks = taskRef.current.slice().filter((task) => {\n      return parseInt(task.key) !== taskId;\n    })\n    setTasks(newTasks);\n  }\n  \n  useEffect(() => {\n    taskRef.current = tasks;\n    localStorage.setItem(t)\n  }, [tasks]);\n\n  const handleNewTask = () => {\n    // El ID pasa a ser un timestamp (igual al key).\n    // Le paso un task ID para tener un prop desde \n    // la task y así poder levantarla y poder quitarla\n    // del array {tasks} (que es un estado de la lista).\n    let taskId = + new Date();\n    setTasks([...tasks, <Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>])\n  };\n\n  return (\n    <div style={{textAlign: 'center'}}>\n      <h1 className=\"title\">Tareas para hacer</h1>\n      \n      {tasks}\n      <Tooltip placement=\"right\" title=\"Crea una nueva tarea!\" color='blue'>\n        <Button style={{background: 'white'}} onClick={handleNewTask} size='middle' icon={ <PlusSquareOutlined />}/>\n      </Tooltip>\n    </div>\n  );\n\n};\n\nexport default TaskList;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,MAAM,EAAEC,OAAO,QAAS,MAAM;AACvC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,OAAO,GAAGT,MAAM,CAACO,KAAK,CAAC;EAE7B,MAAMG,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIC,QAAQ,GAAGH,OAAO,CAACI,OAAO,CAACC,KAAK,EAAE,CAACC,MAAM,CAAEC,IAAI,IAAK;MACtD,OAAOC,QAAQ,CAACD,IAAI,CAACE,GAAG,CAAC,KAAKP,MAAM;IACtC,CAAC,CAAC;IACFH,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACI,OAAO,GAAGN,KAAK;IACvBY,YAAY,CAACC,OAAO,CAACC,CAAC,CAAC;EACzB,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEX,MAAMe,aAAa,GAAG,MAAM;IAC1B;IACA;IACA;IACA;IACA,IAAIX,MAAM,GAAG,CAAE,IAAIY,IAAI,EAAE;IACzBf,QAAQ,CAAC,CAAC,GAAGD,KAAK,eAAE,QAAC,IAAI;MAAC,SAAS,EAAEG,WAAY;MAAC,MAAM,EAAEC;IAAO,GAAMA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,CAAC;EACpF,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAACa,SAAS,EAAE;IAAQ,CAAE;IAAA,wBAChC;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,EAE3CjB,KAAK,eACN,QAAC,OAAO;MAAC,SAAS,EAAC,OAAO;MAAC,KAAK,EAAC,uBAAuB;MAAC,KAAK,EAAC,MAAM;MAAA,uBACnE,QAAC,MAAM;QAAC,KAAK,EAAE;UAACkB,UAAU,EAAE;QAAO,CAAE;QAAC,OAAO,EAAEH,aAAc;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,eAAG,QAAC,kBAAkB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACpG;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAGV,CAAC;AAAC,GApCIhB,QAAQ;AAAA,KAARA,QAAQ;AAsCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}