{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mati\\\\Desktop\\\\proyecto-final-front\\\\src\\\\pages\\\\home\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    let oldTasks = JSON.parse(localStorage.getItem('tasks')),\n      newTasks = [];\n    for (let task of oldTasks) {}\n  });\n  let taskRef = useRef(tasks);\n  const parseTasks = recoveredTasks => {\n    console.log(recoveredTasks);\n    return recoveredTasks;\n  };\n  const destroyTask = taskId => {\n    let newTasks = taskRef.current.slice().filter(task => {\n      return parseInt(task.key) !== taskId;\n    });\n    setTasks(newTasks);\n  };\n  useEffect(() => {\n    taskRef.current = tasks;\n  }, [tasks]);\n  const handleNewTask = () => {\n    // El ID pasa a ser un timestamp (igual al key).\n    // Le paso un task ID para tener un prop desde \n    // la task y así poder levantarla y poder quitarla\n    // del array {tasks} (que es un estado de la lista).\n    let taskId = +new Date();\n    localStorage.setItem('tasks', tasks.push( /*#__PURE__*/_jsxDEV(Task, {\n      onDestroy: destroyTask,\n      taskId: taskId\n    }, taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 46\n    }, this)));\n    //setTasks([...tasks, <Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>])\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tareas para hacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), tasks, /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"right\",\n      title: \"Crea una nueva tarea!\",\n      color: \"blue\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          background: 'white'\n        },\n        onClick: handleNewTask,\n        size: \"middle\",\n        icon: /*#__PURE__*/_jsxDEV(PlusSquareOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"NLtiN2bf+DGryAlHPNlbZUZBh7Y=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Tooltip","PlusSquareOutlined","Task","TaskList","tasks","setTasks","oldTasks","JSON","parse","localStorage","getItem","newTasks","task","taskRef","parseTasks","recoveredTasks","console","log","destroyTask","taskId","current","slice","filter","parseInt","key","handleNewTask","Date","setItem","push","textAlign","background"],"sources":["C:/Users/mati/Desktop/proyecto-final-front/src/pages/home/components/TaskList.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { Button, Tooltip  } from 'antd';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState(() => {\r\n    let oldTasks = JSON.parse(localStorage.getItem('tasks'))\r\n      , newTasks = []\r\n    \r\n    for (let task of oldTasks) {\r\n\r\n    }\r\n  });\r\n\r\n  let taskRef = useRef(tasks);\r\n\r\n  const parseTasks = (recoveredTasks) => {\r\n    console.log(recoveredTasks);\r\n    return recoveredTasks;\r\n  }\r\n\r\n  const destroyTask = (taskId) => {\r\n    let newTasks = taskRef.current.slice().filter((task) => {\r\n      return parseInt(task.key) !== taskId;\r\n    })\r\n    setTasks(newTasks);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    taskRef.current = tasks;\r\n  }, [tasks]);\r\n  \r\n  const handleNewTask = () => {\r\n    // El ID pasa a ser un timestamp (igual al key).\r\n    // Le paso un task ID para tener un prop desde \r\n    // la task y así poder levantarla y poder quitarla\r\n    // del array {tasks} (que es un estado de la lista).\r\n    let taskId = + new Date();\r\n    localStorage.setItem('tasks', tasks.push(<Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>));\r\n    //setTasks([...tasks, <Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>])\r\n  };\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1 className=\"title\">Tareas para hacer</h1>\r\n      \r\n      {tasks}\r\n      <Tooltip placement=\"right\" title=\"Crea una nueva tarea!\" color='blue'>\r\n        <Button style={{background: 'white'}} onClick={handleNewTask} size='middle' icon={<PlusSquareOutlined />}/>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,MAAM,EAAEC,OAAO,QAAS,MAAM;AACvC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACvC,IAAIU,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MACpDC,QAAQ,GAAG,EAAE;IAEjB,KAAK,IAAIC,IAAI,IAAIN,QAAQ,EAAE,CAE3B;EACF,CAAC,CAAC;EAEF,IAAIO,OAAO,GAAGhB,MAAM,CAACO,KAAK,CAAC;EAE3B,MAAMU,UAAU,GAAIC,cAAc,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;IAC3B,OAAOA,cAAc;EACvB,CAAC;EAED,MAAMG,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIR,QAAQ,GAAGE,OAAO,CAACO,OAAO,CAACC,KAAK,EAAE,CAACC,MAAM,CAAEV,IAAI,IAAK;MACtD,OAAOW,QAAQ,CAACX,IAAI,CAACY,GAAG,CAAC,KAAKL,MAAM;IACtC,CAAC,CAAC;IACFd,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAEDb,SAAS,CAAC,MAAM;IACde,OAAO,CAACO,OAAO,GAAGhB,KAAK;EACzB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMqB,aAAa,GAAG,MAAM;IAC1B;IACA;IACA;IACA;IACA,IAAIN,MAAM,GAAG,CAAE,IAAIO,IAAI,EAAE;IACzBjB,YAAY,CAACkB,OAAO,CAAC,OAAO,EAAEvB,KAAK,CAACwB,IAAI,eAAC,QAAC,IAAI;MAAC,SAAS,EAAEV,WAAY;MAAC,MAAM,EAAEC;IAAO,GAAMA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,CAAC;IACvG;EACF,CAAC;;EAED,oBACE;IAAK,KAAK,EAAE;MAACU,SAAS,EAAE;IAAQ,CAAE;IAAA,wBAChC;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,EAE3CzB,KAAK,eACN,QAAC,OAAO;MAAC,SAAS,EAAC,OAAO;MAAC,KAAK,EAAC,uBAAuB;MAAC,KAAK,EAAC,MAAM;MAAA,uBACnE,QAAC,MAAM;QAAC,KAAK,EAAE;UAAC0B,UAAU,EAAE;QAAO,CAAE;QAAC,OAAO,EAAEL,aAAc;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,eAAE,QAAC,kBAAkB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACnG;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAGV,CAAC;AAAC,GAjDItB,QAAQ;AAAA,KAARA,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}