{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mati\\\\Desktop\\\\proyecto-final-front\\\\src\\\\pages\\\\home\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const taskRef = useRef(tasks);\n  const destroyTask = taskId => {\n    let newTasks = taskRef.current.slice().filter(task => {\n      return parseInt(task.key) !== taskId;\n    });\n    setTasks(newTasks);\n  };\n  useEffect(() => {\n    taskRef.current = tasks;\n  }, [tasks]);\n  const handleNewTask = () => {\n    // El ID pasa a ser un timestamp (igual al key).\n    // Le paso un task ID para tener un prop desde \n    // la task y así poder levantarla y poder quitarla\n    // del array {tasks} (que es un estado de la lista).\n    let taskId = +new Date();\n    setTasks([...tasks, /*#__PURE__*/_jsxDEV(Task, {\n      onDestroy: destroyTask,\n      taskId: taskId\n    }, taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this)]);\n  };\n  const getAvailableTasks = () => {\n    let localStorageTaskIds = JSON.parse(localStorage.getItem('tasks')),\n      localStorageTasks = [];\n    localStorageTaskIds.forEach(task => {\n      localStorageTasks.push();\n    });\n    return localStorageTasks.length !== 0 ? localStorageTasks : tasks;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tareas para hacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), getAvailableTasks(), /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"right\",\n      title: \"Crea una nueva tarea!\",\n      color: \"blue\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          background: 'white'\n        },\n        onClick: handleNewTask,\n        size: \"middle\",\n        icon: /*#__PURE__*/_jsxDEV(PlusSquareOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 92\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"JGTEj1eE5R5iN1eggulVjoV4KIU=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Tooltip","PlusSquareOutlined","Task","TaskList","tasks","setTasks","taskRef","destroyTask","taskId","newTasks","current","slice","filter","task","parseInt","key","handleNewTask","Date","getAvailableTasks","localStorageTaskIds","JSON","parse","localStorage","getItem","localStorageTasks","forEach","push","length","textAlign","background"],"sources":["C:/Users/mati/Desktop/proyecto-final-front/src/pages/home/components/TaskList.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { Button, Tooltip  } from 'antd';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const taskRef = useRef(tasks);\r\n\r\n  const destroyTask = (taskId) => {\r\n    let newTasks = taskRef.current.slice().filter((task) => {\r\n      return parseInt(task.key) !== taskId;\r\n    })\r\n    setTasks(newTasks);\r\n  }\r\n  \r\n  useEffect(() => {\r\n    taskRef.current = tasks;\r\n  }, [tasks]);\r\n\r\n  const handleNewTask = () => {\r\n    // El ID pasa a ser un timestamp (igual al key).\r\n    // Le paso un task ID para tener un prop desde \r\n    // la task y así poder levantarla y poder quitarla\r\n    // del array {tasks} (que es un estado de la lista).\r\n    let taskId = + new Date();\r\n    setTasks([...tasks, <Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>])\r\n  };\r\n\r\n  const getAvailableTasks = () => {\r\n    let localStorageTaskIds = JSON.parse(localStorage.getItem('tasks'))\r\n      , localStorageTasks = [];\r\n\r\n    localStorageTaskIds.forEach((task) => {\r\n      localStorageTasks.push()\r\n    })\r\n    \r\n    return localStorageTasks.length !== 0 ? localStorageTasks : tasks; \r\n  }\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1 className=\"title\">Tareas para hacer</h1>\r\n      \r\n      {getAvailableTasks()}\r\n      <Tooltip placement=\"right\" title=\"Crea una nueva tarea!\" color='blue'>\r\n        <Button style={{background: 'white'}} onClick={handleNewTask} size='middle' icon={ <PlusSquareOutlined />}/>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default TaskList;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,MAAM,EAAEC,OAAO,QAAS,MAAM;AACvC,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMU,OAAO,GAAGT,MAAM,CAACO,KAAK,CAAC;EAE7B,MAAMG,WAAW,GAAIC,MAAM,IAAK;IAC9B,IAAIC,QAAQ,GAAGH,OAAO,CAACI,OAAO,CAACC,KAAK,EAAE,CAACC,MAAM,CAAEC,IAAI,IAAK;MACtD,OAAOC,QAAQ,CAACD,IAAI,CAACE,GAAG,CAAC,KAAKP,MAAM;IACtC,CAAC,CAAC;IACFH,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACI,OAAO,GAAGN,KAAK;EACzB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMY,aAAa,GAAG,MAAM;IAC1B;IACA;IACA;IACA;IACA,IAAIR,MAAM,GAAG,CAAE,IAAIS,IAAI,EAAE;IACzBZ,QAAQ,CAAC,CAAC,GAAGD,KAAK,eAAE,QAAC,IAAI;MAAC,SAAS,EAAEG,WAAY;MAAC,MAAM,EAAEC;IAAO,GAAMA,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,CAAC,CAAC;EACpF,CAAC;EAED,MAAMU,iBAAiB,GAAG,MAAM;IAC9B,IAAIC,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;MAC/DC,iBAAiB,GAAG,EAAE;IAE1BL,mBAAmB,CAACM,OAAO,CAAEZ,IAAI,IAAK;MACpCW,iBAAiB,CAACE,IAAI,EAAE;IAC1B,CAAC,CAAC;IAEF,OAAOF,iBAAiB,CAACG,MAAM,KAAK,CAAC,GAAGH,iBAAiB,GAAGpB,KAAK;EACnE,CAAC;EAED,oBACE;IAAK,KAAK,EAAE;MAACwB,SAAS,EAAE;IAAQ,CAAE;IAAA,wBAChC;MAAI,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB,EAE3CV,iBAAiB,EAAE,eACpB,QAAC,OAAO;MAAC,SAAS,EAAC,OAAO;MAAC,KAAK,EAAC,uBAAuB;MAAC,KAAK,EAAC,MAAM;MAAA,uBACnE,QAAC,MAAM;QAAC,KAAK,EAAE;UAACW,UAAU,EAAE;QAAO,CAAE;QAAC,OAAO,EAAEb,aAAc;QAAC,IAAI,EAAC,QAAQ;QAAC,IAAI,eAAG,QAAC,kBAAkB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACpG;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAGV,CAAC;AAAC,GA9CIb,QAAQ;AAAA,KAARA,QAAQ;AAgDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}