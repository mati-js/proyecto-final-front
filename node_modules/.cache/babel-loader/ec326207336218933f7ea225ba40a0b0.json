{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mati\\\\Desktop\\\\proyecto-final-front\\\\src\\\\pages\\\\home\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { PlusSquareOutlined } from '@ant-design/icons';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const destroyTask = taskId => {\n    let newTasks = taskRef.current.slice().filter(task => {\n      return parseInt(task.key) !== taskId;\n    });\n    localStorage.setItem('tasks', JSON.stringify(newTasks));\n    setTasks(newTasks);\n  };\n  const [tasks, setTasks] = useState(() => {\n    let oldTasks = JSON.parse(localStorage.getItem('tasks')),\n      newTasks = [];\n    if (oldTasks !== null) {\n      for (let i = 0; i < oldTasks.length; i++) {\n        newTasks.push( /*#__PURE__*/_jsxDEV(Task, {\n          onDestroy: destroyTask,\n          taskId: oldTasks[i].key\n        }, oldTasks[i].key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 23\n        }, this));\n      }\n    }\n    return newTasks;\n  });\n  let taskRef = useRef(tasks);\n  useEffect(() => {\n    taskRef.current = tasks;\n  }, [tasks]);\n  const handleNewTask = () => {\n    // El ID pasa a ser un timestamp (igual al key).\n    // Le paso un task ID para tener un prop desde \n    // la task y así poder levantarla y poder quitarla\n    // del array {tasks} (que es un estado de la lista).\n    let taskId = +new Date();\n    localStorage.setItem('tasks', JSON.stringify([...tasks, /*#__PURE__*/_jsxDEV(Task, {\n      onDestroy: destroyTask,\n      taskId: taskId\n    }, taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 61\n    }, this)]));\n    setTasks([...tasks, /*#__PURE__*/_jsxDEV(Task, {\n      onDestroy: destroyTask,\n      taskId: taskId\n    }, taskId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this)]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tareas para hacer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), tasks, /*#__PURE__*/_jsxDEV(Tooltip, {\n      placement: \"right\",\n      title: \"Crea una nueva tarea!\",\n      color: \"blue\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          background: 'white'\n        },\n        onClick: handleNewTask,\n        size: \"middle\",\n        icon: /*#__PURE__*/_jsxDEV(PlusSquareOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 91\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"XyuMZtfFi9pc43sIILIyl2Lirdo=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["useState","useRef","useEffect","Button","Tooltip","PlusSquareOutlined","Task","TaskList","destroyTask","taskId","newTasks","taskRef","current","slice","filter","task","parseInt","key","localStorage","setItem","JSON","stringify","setTasks","tasks","oldTasks","parse","getItem","i","length","push","handleNewTask","Date","textAlign","background"],"sources":["C:/Users/mati/Desktop/proyecto-final-front/src/pages/home/components/TaskList.jsx"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport { Button, Tooltip  } from 'antd';\r\nimport { PlusSquareOutlined } from '@ant-design/icons';\r\nimport Task from './Task';\r\n\r\nconst TaskList = () => {\r\n  const destroyTask = (taskId) => {\r\n    let newTasks = taskRef.current.slice().filter((task) => {\r\n      return parseInt(task.key) !== taskId;\r\n    })\r\n    localStorage.setItem('tasks', JSON.stringify(newTasks));\r\n    setTasks(newTasks);\r\n  }\r\n  \r\n  const [tasks, setTasks] = useState(() => {\r\n    let oldTasks = JSON.parse(localStorage.getItem('tasks'))\r\n      , newTasks = [];\r\n    \r\n    if (oldTasks !== null) {\r\n      for (let i = 0; i < oldTasks.length; i++) {\r\n        newTasks.push(<Task onDestroy={destroyTask} taskId={oldTasks[i].key} key={oldTasks[i].key}/>)\r\n      }\r\n    }\r\n    \r\n    return newTasks;\r\n  });\r\n\r\n  let taskRef = useRef(tasks);\r\n  \r\n  \r\n   \r\n  useEffect(() => {\r\n    taskRef.current = tasks;\r\n  }, [tasks]);\r\n  \r\n  const handleNewTask = () => {\r\n    // El ID pasa a ser un timestamp (igual al key).\r\n    // Le paso un task ID para tener un prop desde \r\n    // la task y así poder levantarla y poder quitarla\r\n    // del array {tasks} (que es un estado de la lista).\r\n    let taskId = + new Date();\r\n    localStorage.setItem('tasks', JSON.stringify([...tasks, <Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>]));\r\n    setTasks([...tasks, <Task onDestroy={destroyTask} taskId={taskId} key={taskId}/>])\r\n  };\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <h1 className=\"title\">Tareas para hacer</h1>\r\n      \r\n      {tasks}\r\n      <Tooltip placement=\"right\" title=\"Crea una nueva tarea!\" color='blue'>\r\n        <Button style={{background: 'white'}} onClick={handleNewTask} size='middle' icon={<PlusSquareOutlined />}/>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default TaskList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}